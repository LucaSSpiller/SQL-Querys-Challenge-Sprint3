DROP TABLE NK_TB_CARRINHO;
DROP TABLE NK_TB_CATEGORIA_PRODUTO;
DROP TABLE NK_TB_CATEGORIA;
DROP TABLE NK_TB_PRODUTO;
DROP TABLE NK_TB_USUARIO;


drop table custom_exceptions;
drop table nk_tb_usuario_log;
drop table sq_categoria;
drop table sq_produto_challenge;
drop table sq_usuario;


CREATE TABLE nk_tb_categoria
(
    id_categoria NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
    nm_categoria VARCHAR2(30) NOT NULL,
    CONSTRAINT pk_categoria PRIMARY KEY (id_categoria),
    CONSTRAINT un_nm_categoria UNIQUE (nm_categoria)
);


CREATE TABLE nk_tb_produto
(
    id_produto NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
    ds_genero VARCHAR2(10) NOT NULL CHECK (ds_genero IN ('FEMININO', 'MASCULINO', 'UNISSEX')),
    nm_produto VARCHAR2(50) NOT NULL,
    nr_preco NUMBER(10, 2) NOT NULL,
    CONSTRAINT pk_produto PRIMARY KEY (id_produto)
);

CREATE TABLE nk_tb_categoria_produto
(
    id_produto NUMBER(19) NOT NULL,
    id_categoria NUMBER(19) NOT NULL,
    CONSTRAINT pk_categoria_produto PRIMARY KEY (id_produto, id_categoria),
    CONSTRAINT fk_categoria FOREIGN KEY (id_categoria) REFERENCES nk_tb_categoria (id_categoria),
    CONSTRAINT fk_produto FOREIGN KEY (id_produto) REFERENCES nk_tb_produto (id_produto)
);


CREATE TABLE nk_tb_usuario
(
    id_usuario NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
    ds_email VARCHAR2(30) NOT NULL,
    nm_usuario VARCHAR2(30) NOT NULL,
    ds_senha VARCHAR2(30) NOT NULL,
    nm_sobrenome VARCHAR2(30) NOT NULL,
    CONSTRAINT pk_usuario PRIMARY KEY (id_usuario),
    CONSTRAINT uk_email UNIQUE (ds_email)
);


CREATE TABLE nk_tb_carrinho
(
    id_carrinho NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
    id_produto NUMBER(19) NOT NULL,
    id_usuario NUMBER(19) NOT NULL,
    CONSTRAINT pk_carrinho PRIMARY KEY (id_carrinho),
    CONSTRAINT fk_produto_carrinho FOREIGN KEY (id_produto) REFERENCES nk_tb_produto (id_produto),
    CONSTRAINT fk_usuario_carrinho FOREIGN KEY (id_usuario) REFERENCES nk_tb_usuario (id_usuario)
);



CREATE TABLE custom_exceptions (
    exception_id NUMBER PRIMARY KEY,
    exception_code VARCHAR2(50) NOT NULL,
    exception_name VARCHAR2(100) NOT NULL,
    occurrence_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    logged_in_user VARCHAR2(50) NOT NULL
);

-- Criação da sequência custom_exceptions_seq
CREATE SEQUENCE custom_exceptions_seq
  START WITH 1
  INCREMENT BY 1;
  

CREATE TABLE nk_tb_usuario_log (
    log_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    id_usuario NUMBER(19),
    coluna_atualizada VARCHAR2(50),
    valor_antigo VARCHAR2(50),
    valor_novo VARCHAR2(50),
    data_atualizacao TIMESTAMP,
    CONSTRAINT pk_usuario_log PRIMARY KEY (log_id)
);



CREATE TABLE sq_categoria
(
    next_not_cached_value NUMBER(21) NOT NULL,
    minimum_value NUMBER(21) NOT NULL,
    maximum_value NUMBER(21) NOT NULL,
    start_value NUMBER(21) NOT NULL,
    incrementt NUMBER(21) NOT NULL,
    cache_size NUMBER(21) NOT NULL,
    cycle_option NUMBER(1) NOT NULL,
    cycle_count NUMBER(21) NOT NULL
);


CREATE TABLE sq_produto_challenge
(
    next_not_cached_value NUMBER(21) NOT NULL,
    minimum_value NUMBER(21) NOT NULL,
    maximum_value NUMBER(21) NOT NULL,
    start_value NUMBER(21) NOT NULL,
    incrementt NUMBER(21) NOT NULL,
    cache_size NUMBER(21) NOT NULL,
    cycle_option NUMBER(1) NOT NULL,
    cycle_count NUMBER(21) NOT NULL
);


CREATE TABLE sq_usuario
(
    next_not_cached_value NUMBER(21) NOT NULL,
    minimum_value NUMBER(21) NOT NULL,
    maximum_value NUMBER(21) NOT NULL,
    start_value NUMBER(21) NOT NULL,
    incrementt NUMBER(21) NOT NULL,
    cache_size NUMBER(21) NOT NULL,
    cycle_option NUMBER(1) NOT NULL,
    cycle_count NUMBER(21) NOT NULL
);
